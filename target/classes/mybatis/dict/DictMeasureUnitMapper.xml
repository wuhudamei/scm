<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mdni.scm.repository.dict.DictMeasureUnitDao">
    
    <resultMap id="resultMap" type="DictMeasureUnit">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="status" property="status"/>
    </resultMap>
    
    <sql id="selectAllColumn">
    	id,name,status
    </sql>
    
    <select id="getById" parameterType="long" resultMap="resultMap">
        select <include refid="selectAllColumn" />
        from dict_measure_unit
        where id = #{id}
    </select>
    
    <insert id="insert" parameterType="DictMeasureUnit" useGeneratedKeys="true" keyProperty="id">
        insert into dict_measure_unit(name,status) values 
        (#{name},#{status})
    </insert>
    
    <insert id="deleteById" parameterType="long">
        delete from dict_measure_unit where id = #{id}
    </insert>
    
    <update id="update" parameterType="DictMeasureUnit">
        update dict_measure_unit 
        <set>
        	<if test="name!=null">
        		name = #{name},
        	</if>
        	<if test="status!=null">
        	 status = #{status},
        	</if>
        </set>
         where id = #{id}
    </update>

    <select id="findAll" resultMap="resultMap">
        select  <include refid="selectAllColumn" /> from dict_measure_unit
        where status = 'OPEN'
        order by id
    </select>

    <select id="searchTotal" parameterType="map" resultType="long">
        select count(*)
        <include refid="searchFromWhere"/>
    </select>


    <select id="search" parameterType="map" resultMap="resultMap">
        select <include refid="selectAllColumn" />
        <include refid="searchFromWhere"/>
        <if test="sort != null">
            order by
            <foreach collection="sort" item="order" separator=",">
                ${order.property} ${order.direction}
            </foreach>
        </if>
        limit #{offset}, #{pageSize}
    </select>

    <sql id="searchFromWhere">
        from dict_measure_unit
        <where>
            <if test="keyword != null">
                 name like CONCAT('%', #{keyword}, '%') 
            </if>
        </where>
    </sql>

</mapper>