<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mdni.scm.repository.customer.CustomerDao">
    <resultMap id="BaseResultMap" type="Customer">
        <id column="id" property="id"/>
        <result column="code" property="code"/>
        <result column="name" property="name"/>
        <result column="mobile" property="mobile"/>
        <result column="store_code" property="store.code"/>
        <result column="store_name" property="store.name"/>
    </resultMap>
    
    <sql id="customerInfo">
        id,code,name,mobile,store_code
    </sql>

    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="customerInfo"/>
        from customer
    </select>

    <delete id="deleteById" parameterType="long">
        delete from customer where id=#{id}
    </delete>

    <select id="getById" parameterType="long" resultMap="BaseResultMap">
        select
        <include refid="customerInfo"/>
        from customer where id=#{id}
    </select>
    
    <insert id="insert" parameterType="Customer"  useGeneratedKeys="true"  keyProperty="id">
    	insert into customer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="code != null">
                code,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="store != null and store.code != null">
                store_code
            </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="code != null">
                #{code},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="mobile != null">
                #{mobile},
            </if>
            <if test="store != null and store.code != null">
                #{store.code}
            </if>
        </trim>

    </insert>
    
    <update id="update" parameterType="Customer">
    	update customer
        <set>
            <if test="code != null">
                code=#{code},
            </if>
            <if test="name != null">
                name=#{name},
            </if>
            <if test="mobile != null">
                mobile=#{mobile},
            </if>
            <if test="store != null and store.code != null">
                store_code=#{store.code}
            </if>
        </set>
    	where id = #{id}
    </update>
    
    <select id="getByCode" resultMap="BaseResultMap">
    	select <include refid="customerInfo"/>
        from customer where code = #{code}
    </select>

    <select id="searchTotal" parameterType="map" resultType="long">
        select count(*) from customer cur
        <include refid="searchWhere"/>
    </select>

    <select id="search" parameterType="map" resultMap="BaseResultMap">
        select cur.id,cur.code,cur.name,cur.mobile,cur.store_code,s.name as store_name
        from customer cur left join store s on cur.store_code = s.code
        <where>
            <if test="keyword != null">
            	and (cur.code like CONCAT('%', #{keyword}, '%') or cur.name like CONCAT('%', #{keyword}, '%') or cur.mobile like CONCAT('%', #{keyword}, '%') )
            </if>
            <if test="storeCode != null">
            	and cur.store_code=#{storeCode}
            </if>
        </where>
        <if test="sort != null">
            order by
            <foreach collection="sort" item="order" separator=",">
                ${order.property} ${order.direction}
            </foreach>
        </if>
        limit #{offset}, #{pageSize}
    </select>

    <sql id="searchWhere">
        <where>
            <if test="keyword != null">
            	and ( name like CONCAT('%', #{keyword}, '%') or mobile like CONCAT('%', #{keyword}, '%') )
            </if>
            <if test="storeCode != null">
            	and store_code=#{storeCode}
            </if>
        </where>
    </sql>

</mapper>