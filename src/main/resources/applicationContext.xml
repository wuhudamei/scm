<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/cache
	    http://www.springframework.org/schema/cache/spring-cache.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd"
       default-lazy-init="true">
    <description>Spring公共配置</description>

    <context:property-placeholder ignore-unresolvable="true"
                                  location="classpath*:/application.properties" file-encoding="UTF-8"/>

    <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan base-package="com.damei.scm">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>
    <aop:config expose-proxy="true"/>

    <!-- JSR303 Validator定义 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

    <!-- MyBatis配置 -->
    <!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> -->
    <!-- 当mapper错误时，解开下段，看报错信息 -->
    <bean id="sqlSessionFactory" class="com.damei.scm.common.SqlFactory">
        <property name="dataSource" ref="dataSource"/>
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
        <property name="typeAliasesPackage" value="com.damei.scm.entity"/>
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations" value="classpath:/mybatis/**/*Mapper.xml"/>
    </bean>
    <!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.damei.scm.repository"/>
        <property name="annotationClass" value="com.damei.scm.common.MyBatisRepository"/>
    </bean>
    <!-- 数据源配置, 使用Tomcat JDBC连接池 -->
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <property name="maxActive" value="${jdbc.pool.maxActive}"/>
        <property name="maxIdle" value="${jdbc.pool.maxIdle}"/>
        <property name="minIdle" value="${jdbc.pool.minIdle}"/>
        <property name="defaultAutoCommit" value="false"/>
        <property name="testOnBorrow" value="true"/>

        <property name="testWhileIdle" value="false"/>
        <property name="validationInterval" value="30000"/>
        <property name="testOnReturn" value="false"/>
        <property name="validationQuery" value="select 1"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.pool.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.pool.minEvictableIdleTimeMillis}"/>
        <property name="initialSize" value="${jdbc.pool.initialSize}"/>
        <property name="maxWait" value="${jdbc.pool.maxWait}"/>

        <!-- 180秒，也就是3分钟 -->
        <property name="removeAbandonedTimeout" value="180"/>
        <property name="removeAbandoned" value="true"/>
    </bean>
    <!-- 事务管理器, Jdbc单数据源事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- Redis配置 -->
    <bean id="jedisTemplate" class="com.damei.scm.redis.JedisTemplate">
        <constructor-arg ref="jedisPool"/>
    </bean>

    <bean id="redissonTemplate" class="com.damei.scm.redis.RedissonTemplate">
        <constructor-arg index="0" value="${redis.host}"/>
        <constructor-arg index="1" value="${redis.database}"/>
        <constructor-arg index="2" value="${redis.timeout}"/>
        <constructor-arg index="3" value="${redis.password}"/>
    </bean>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}"/>
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.host}"/>
        <constructor-arg index="2" value="${redis.port}"/>
        <constructor-arg index="3" value="${redis.timeout}"/>
        <constructor-arg index="4" value="${redis.password}"/>
        <constructor-arg index="5" value="${redis.database}"/>
    </bean>


    <!-- Spring Cache Redis配置 -->
    <cache:annotation-driven cache-manager="redisCacheManager" key-generator="mySimpleKeyGenerator"/>

    <bean id="redisCacheManager" class="com.damei.scm.common.utils.cache.MyRedisCacheManager">
        <constructor-arg index="0" ref="redisTemplate"/>
        <!-- springCache注解缓存15分钟,900s -->
        <property name="defaultExpiration" value="900"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory">
            <bean class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
                <property name="poolConfig" ref="jedisPoolConfig"/>
                <property name="hostName" value="${redis.host}"/>
                <property name="port" value="${redis.port}"/>
                <property name="password" value="${redis.password}"/>
                <property name="timeout" value="${redis.timeout}"/>
                <property name="database" value="${redis.database}"/>
            </bean>
        </property>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer" ref="myJackson2JsonRedisSerializer"/>
    </bean>

    <!-- 数据源配置,使用应用服务器的数据库连接池 -->
    <import resource="shiro/applicationContext-shiro.xml"/>
</beans>