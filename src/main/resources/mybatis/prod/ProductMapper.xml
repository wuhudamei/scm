<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.damei.scm.repository.prod.ProductDao">
	
    <resultMap id="BaseResultMap"  type="Product">
      	<id column="id" property="id"/> 
        <result column="code" property="code"/>
        <result column="name" property="name"/>
        <result column="category_url" property="catalog.url"/>
        <result column="brand_id" property="brand.id"/>
        <result column="supplier_id" property="supplier.id"/>
        <result column="measure_unit_id" property="measureUnit.id"/>
        <result column="measure_unit_name" property="measureUnitName"/>
        <result column="model" property="model"/>
        <result column="spec" property="spec"/>
        <result column="detail" property="detail"/>
        <result column="status" property="status"/>
        <result column="has_sku" property="hasSku"/>
        <result column="editor" property="editor.id"/>
        <result column="edit_time" property="editTime"/>
        <result column="process_status" property="processStatus"/>
    </resultMap>
    
    <resultMap  id="adminSearchResultMap" type="Product" extends="BaseResultMap">
    	<result column="supplier_name" property="supplier.name"/>
        <result column="brand_name" property="brand.brandName"/>
    </resultMap>
    
    <sql id="Base_Column_List">
        id, code, name,category_url, brand_id,supplier_id,measure_unit_id,model,spec, status, has_sku,
        editor, edit_time
    </sql>
	
    <select id="getById" resultMap="BaseResultMap" parameterType="long">
        select <include refid="Base_Column_List" />, detail
        from prod_product
        where id = #{id}
    </select>
    
    <select id="findAllCode"  resultType="string">
    	select code from prod_product order by id
    </select>
    
    <select id="getByCode" resultMap="BaseResultMap" parameterType="Product">
        select <include refid="Base_Column_List" />
        from prod_product
        where code = #{code} and supplier_id = #{supplier.id}
		<if test="id!=null">
			and id!=#{id}
		</if>        
    </select>
    
    <delete id="deleteById" parameterType="long">
        delete from prod_product
        where id = #{id}
    </delete>
    
    <insert id="insert" parameterType="Product" useGeneratedKeys="true"  keyProperty="id">
        insert into prod_product
        <trim prefix="(" suffix=")" suffixOverrides=",">
             code, name,supplier_id,category_url,brand_id,measure_unit_id,detail,status,has_sku,editor,edit_time,
            <if test="spec != null">
                spec,
            </if>
            <if test="model != null">
                model,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
             #{code}, #{name},#{supplier.id},#{catalog.url},#{brand.id},#{measureUnit.id}, #{detail},#{status},#{hasSku},#{editor.id},#{editTime},
            <if test="spec != null">
                #{spec},
            </if>
            <if test="model != null">
                #{model},
            </if>
        </trim>
    </insert>
    
    <update id="update" parameterType="Product">
        update prod_product
        <set>
            <if test="code != null">
                code = #{code},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="catalog != null">
                category_url = #{catalog.url},
            </if>
            <if test="brand != null">
                brand_id = #{brand.id},
            </if>
            <if test="supplier!= null">
                supplier_id = #{supplier.id},
            </if>
            <if test="measureUnit!=null and measureUnit.id!= null and measureUnit.id!=''">
                measure_unit_id = #{measureUnit.id},
            </if>

            <if test="spec != null">
                spec = #{spec},
            </if>
            <if test="model != null">
                model = #{model},
            </if>
            
            <if test="detail != null">
                detail = #{detail},
            </if>
            
            <if test="status != null">
                status = #{status},
            </if>
            
            <if test="hasSku != null">
                has_sku = #{hasSku},
            </if>
            
            <if test="editor != null">
                editor = #{editor.id},
            </if>
            
            <if test="editTime != null">
                edit_time = #{editTime},
            </if>
        </set>
        where id = #{id}
    </update>


    <select id="findByIdInList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from prod_product
        where id in
        <foreach collection="ids" index="idx" item="id" separator="," open="(" close=")">
            ${id}
        </foreach>
        <if test="status!=null">
            and status=#{status}
        </if>
    </select>
    
    <!--admin分页查询start-->
    <select id="adminSearchTotal" parameterType="map" resultType="long">
        SELECT count(*)
        <include refid="adminSearchWhere"/>
    </select>

    <select id="adminSearch" parameterType="map" resultMap="adminSearchResultMap">
        SELECT prod.*,supplier.name as supplier_name,brand.brand_name AS brand_name,measureUnit.name AS measure_unit_name,pp.process_status
        <include refid="adminSearchWhere"/>
        ORDER BY
        <foreach collection="sort" item="order" separator=",">
            ${order.property} ${order.direction}
        </foreach>
        LIMIT #{offset},#{pageSize}
    </select>

    <sql id="adminSearchWhere">
        FROM prod_product prod
        LEFT JOIN prod_supplier supplier on (prod.supplier_id = supplier.id)
        LEFT JOIN prod_brand brand ON (prod.brand_id = brand.id)
        LEFT JOIN dict_measure_unit measureUnit ON (prod.measure_unit_id = measureUnit.id)
        LEFT JOIN (
        SELECT
        product_id,
        GROUP_CONCAT(process_status) process_status
        FROM
        prod_sku
        GROUP BY
        product_id
        )pp ON pp.product_id=prod.id
        <where>
            prod.supplier_id IN (
            SELECT
            ps.id
            FROM
            prod_supplier ps
            LEFT JOIN region_supplier rs ON rs.id = ps.region_supplier_id
            LEFT JOIN store s ON s.code = rs.store_code
            <where>
                <if test="allStoreCode != null">
                    AND s.code = #{allStoreCode}
                </if>
                <if test="allSupplierId != null">
                    AND rs.id = #{allSupplierId}
                </if>
                <if test="supplierId!= null">
                    AND ps.id = #{supplierId}
                </if>
            </where>
            )
            <if test="keyword != null">
               AND (prod.code like  concat('%',#{keyword},'%')
                 or prod.name like  concat('%',#{keyword},'%')
                )
            </if>
            <if test="status!=null">
                and prod.status=#{status}
            </if>
           
            <if test="catalogUrl != null">
                and prod.category_url like concat(#{catalogUrl},'%')
            </if>
            
            <if test="managedSupplierIdList!=null">
	        	AND supplier_id in 
	        	<foreach collection="managedSupplierIdList" index="idx" item="supplierIdr" open="(" close=")" separator=",">
					${supplierIdr}
	        	</foreach>
	        </if>
            
            <if test="supplierCodeName != null">
                 and (supplier.code like concat('%',#{supplierCodeName},'%') or  supplier.name like concat('%',#{supplierCodeName},'%') )
            </if>
        </where>
    </sql>
    <!--admin分页查询end-->
    <select id="getByInfoById" resultMap="adminSearchResultMap">
        SELECT prod.*,supplier.name as supplier_name,brand.brand_name AS brand_name,measureUnit.name AS measure_unit_name
        FROM prod_product prod
        LEFT JOIN prod_supplier supplier on (prod.supplier_id = supplier.id)
        LEFT JOIN prod_brand brand ON (prod.brand_id = brand.id)
        LEFT JOIN dict_measure_unit measureUnit ON (prod.measure_unit_id = measureUnit.id)
        WHERE  prod.id=#{id}
    </select>
    
    <select id="getByMap" parameterType="map" resultMap="BaseResultMap">
        select * from prod_product
         where name = #{productName}
           and brand_id = ( select id from prod_brand where brand_name = #{brandName} )
           and supplier_id = ( select id from prod_supplier where name = #{supplierName} )
    </select>

    <insert id="insertBatchReturnProperty" parameterType="list" useGeneratedKeys="true" keyProperty="id">
        insert into prod_product (
            code, name,supplier_id,category_url,brand_id,measure_unit_id,detail,status,has_sku,editor,edit_time,spec,model
        ) VALUES
        <foreach item="item" collection="list"  index="index" separator="," >
        (
            #{item.code}, #{item.name},#{item.supplier.id},#{item.catalog.url},#{item.brand.id},#{item.measureUnit.id}, #{item.detail},#{item.status},#{item.hasSku},#{item.editor.id},#{item.editTime},#{item.spec},#{item.model}
        )
        </foreach>
    </insert>
</mapper>