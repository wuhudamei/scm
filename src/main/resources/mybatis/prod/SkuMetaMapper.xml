<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.mdni.scm.repository.prod.SkuMetaDao">

    <resultMap id="skuMetaMap" type="SkuMeta">
        <result column="product_id" property="productId"/>
        <result column="attribute1_name" property="attribute1Name"/>
        <result column="attribute2_name" property="attribute2Name"/>
        <result column="attribute3_name" property="attribute3Name"/>
    </resultMap>

    <insert id="insert" parameterType="SkuMeta" useGeneratedKeys="true" keyProperty="id">
        insert into prod_sku_meta (product_id, attribute1_name, attribute2_name, attribute3_name)
        values (#{productId}, #{attribute1Name}, #{attribute2Name}, #{attribute3Name})
    </insert>

    <select id="getByProductId" parameterType="Long" resultMap="skuMetaMap">
        select product_id, attribute1_name, attribute2_name, attribute3_name
        from prod_sku_meta
        where product_id = #{productId};
    </select>

    <update id="update" parameterType="SkuMeta">
        update prod_sku_meta
        set attribute1_name = #{attribute1Name},
        attribute2_name = #{attribute2Name},
        attribute3_name = #{attribute3Name}
        where product_id = #{productId};
    </update>
    
    <delete id="deleteByProductId" parameterType="long">
        delete from prod_sku_meta
        where product_id=#{productId}
    </delete>
    
    <select id="getProdSkuMetas" parameterType="long"  resultType="map">
	  select attribute1_name,attribute2_name,attribute3_name, attribute1,attribute2,attribute3  
	  from prod_sku  sku  join  prod_sku_meta  meta on (sku.product_id = meta.product_id) 
	  where sku.product_id = #{productId} and sku.status= 'OPEN'
    </select>

    <insert id="batchInsert" parameterType="list">
        insert into prod_sku_meta (
            product_id, attribute1_name, attribute2_name, attribute3_name
        ) VALUES
        <foreach item="item" collection="list"  index="index" separator="," >
        (
            #{item.productId}, #{item.attribute1Name}, #{item.attribute2Name}, #{item.attribute3Name}
        )
        </foreach>
    </insert>
</mapper>