<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.damei.scm.repository.dataArrangement.MaterialContractOperateTurnoverDao">
  <resultMap id="BaseResultMap" type="MaterialContractOperateTurnover">
    <id column="id" property="id" />
    <result column="contract_id" property="contractId" />
    <result column="budget_no" property="materialCustomerContract.budgetNo" />
    <result column="project_code" property="materialCustomerContract.projectCode" />
    <result column="customer_name" property="materialCustomerContract.customerName" />
    <result column="customer_phone" property="materialCustomerContract.customerPhone" />
    <result column="project_address" property="materialCustomerContract.projectAddress" />
    <result column="budget_area" property="materialCustomerContract.budgetArea" />
    <result column="house_layout" property="materialCustomerContract.houseLayout" />
    <result column="designer_name" property="materialCustomerContract.designerName" />
    <result column="designer_phone" property="materialCustomerContract.designerPhone" />
    <result column="customer_service" property="materialCustomerContract.customerService" />
    <result column="customer_service_phone" property="materialCustomerContract.customerServicePhone" />
    <result column="manager_name" property="materialCustomerContract.managerName" />
    <result column="manager_phone" property="materialCustomerContract.managerPhone" />
    <result column="inspector_name" property="materialCustomerContract.inspectorName" />
    <result column="inspector_phone" property="materialCustomerContract.inspectorPhone" />
    <result column="contract_sign_date" property="materialCustomerContract.contractSignDate" />
    <result column="plan_start_date" property="materialCustomerContract.planStartDate" />
    <result column="plan_finish_date" property="materialCustomerContract.planFinishDate" />
    <result column="engineering_cost" property="materialCustomerContract.engineeringCost" />
    <result column="dismantle_fee" property="materialCustomerContract.dismantleFee" />
    <result column="change_fee" property="materialCustomerContract.changeFee" />
    <result column="have_elevator" property="materialCustomerContract.haveElevator" />
    <result column="remarks" property="materialCustomerContract.remarks" />
    <result column="operate_time" property="operateTime" />
    <result column="operate_account" property="operateAccount" />
    <result column="operate_type" property="operateType" />
    <result column="meal" property="materialCustomerContract.meal" />
    <result column="budget_fee" property="materialCustomerContract.budgetFee" />
  </resultMap>


  <sql id="Base_Column_List">
    id,contract_id, budget_no, project_code, customer_name, customer_phone, project_address,
    budget_area, house_layout, designer_name, designer_phone, customer_service, customer_service_phone,
    manager_name, manager_phone, Inspector_name, Inspector_phone, contract_sign_date,
    plan_start_date, plan_finish_date, engineering_cost, dismantle_fee, change_fee, have_elevator,
    remarks, create_time, create_account,status,operate_time,operate_account,operate_type,meal,budget_fee
  </sql>

  <delete id="deleteById">
    delete from material_contract_operate_turnover
    where id = #{id}
  </delete>

  <insert id="insert">
    insert into material_contract_operate_turnover
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="materialCustomerContract.budgetNo != null">
        budget_no,
      </if>
      <if test="contractId != null">
        contract_id,
      </if>
      <if test="materialCustomerContract.projectCode != null">
        project_code,
      </if>
      <if test="materialCustomerContract.customerName != null">
        customer_name,
      </if>
      <if test="materialCustomerContract.customerPhone != null">
        customer_phone,
      </if>
      <if test="materialCustomerContract.projectAddress != null">
        project_address,
      </if>
      <if test="materialCustomerContract.budgetArea != null">
        budget_area,
      </if>
      <if test="materialCustomerContract.meal != null">
        meal,
      </if>
      <if test="materialCustomerContract.budgetFee != null">
        budget_fee,
      </if>
      <if test="materialCustomerContract.houseLayout != null">
        house_layout,
      </if>
      <if test="materialCustomerContract.designerName != null">
        designer_name,
      </if>
      <if test="materialCustomerContract.designerPhone != null">
        designer_phone,
      </if>
      <if test="materialCustomerContract.customerService != null">
        customer_service,
      </if>
      <if test="materialCustomerContract.customerServicePhone != null">
        customer_service_phone,
      </if>
      <if test="materialCustomerContract.managerName != null">
        manager_name,
      </if>
      <if test="materialCustomerContract.managerPhone != null">
        manager_phone,
      </if>
      <if test="materialCustomerContract.inspectorName != null">
        inspector_name,
      </if>
      <if test="materialCustomerContract.inspectorPhone != null">
        inspector_phone,
      </if>
      <if test="materialCustomerContract.contractSignDate != null">
        contract_sign_date,
      </if>
      <if test="materialCustomerContract.planStartDate != null">
        plan_start_date,
      </if>
      <if test="materialCustomerContract.planFinishDate != null">
        plan_finish_date,
      </if>
      <if test="materialCustomerContract.engineeringCost != null">
        engineering_cost,
      </if>
      <if test="materialCustomerContract.dismantleFee != null">
        dismantle_fee,
      </if>
      <if test="materialCustomerContract.changeFee != null">
        change_fee,
      </if>
      <if test="materialCustomerContract.haveElevator != null">
        have_elevator,
      </if>
      <if test="materialCustomerContract.remarks != null">
        remarks,
      </if>
      <if test="operateTime != null">
        operate_time,
      </if>
      <if test="operateAccount != null">
        operate_account,
      </if>
      <if test="operateType != null">
        operate_type
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="materialCustomerContract.budgetNo != null">
        #{materialCustomerContract.budgetNo},
      </if>
      <if test="contractId != null">
        #{contractId},
      </if>
      <if test="materialCustomerContract.projectCode != null">
        #{materialCustomerContract.projectCode},
      </if>
      <if test="materialCustomerContract.customerName != null">
        #{materialCustomerContract.customerName},
      </if>
      <if test="materialCustomerContract.customerPhone != null">
        #{materialCustomerContract.customerPhone},
      </if>
      <if test="materialCustomerContract.projectAddress != null">
        #{materialCustomerContract.projectAddress},
      </if>
      <if test="materialCustomerContract.budgetArea != null">
        #{materialCustomerContract.budgetArea},
      </if>
      <if test="materialCustomerContract.meal != null">
        #{materialCustomerContract.meal},
      </if>
      <if test="materialCustomerContract.budgetFee != null">
        #{materialCustomerContract.budgetFee},
      </if>
      <if test="materialCustomerContract.houseLayout != null">
        #{materialCustomerContract.houseLayout},
      </if>
      <if test="materialCustomerContract.designerName != null">
        #{materialCustomerContract.designerName},
      </if>
      <if test="materialCustomerContract.designerPhone != null">
        #{materialCustomerContract.designerPhone},
      </if>
      <if test="materialCustomerContract.customerService != null">
        #{materialCustomerContract.customerService},
      </if>
      <if test="materialCustomerContract.customerServicePhone != null">
        #{materialCustomerContract.customerServicePhone},
      </if>
      <if test="materialCustomerContract.managerName != null">
        #{materialCustomerContract.managerName},
      </if>
      <if test="materialCustomerContract.managerPhone != null">
        #{materialCustomerContract.managerPhone},
      </if>
      <if test="materialCustomerContract.inspectorName != null">
        #{materialCustomerContract.inspectorName},
      </if>
      <if test="materialCustomerContract.inspectorPhone != null">
        #{materialCustomerContract.inspectorPhone},
      </if>
      <if test="materialCustomerContract.contractSignDate != null">
        #{materialCustomerContract.contractSignDate},
      </if>
      <if test="materialCustomerContract.planStartDate != null">
        #{materialCustomerContract.planStartDate},
      </if>
      <if test="materialCustomerContract.planFinishDate != null">
        #{materialCustomerContract.planFinishDate},
      </if>
      <if test="materialCustomerContract.engineeringCost != null">
        #{materialCustomerContract.engineeringCost},
      </if>
      <if test="materialCustomerContract.dismantleFee != null">
        #{materialCustomerContract.dismantleFee},
      </if>
      <if test="materialCustomerContract.changeFee != null">
        #{materialCustomerContract.changeFee},
      </if>
      <if test="materialCustomerContract.haveElevator != null">
        #{materialCustomerContract.haveElevator},
      </if>
      <if test="materialCustomerContract.remarks != null">
        #{materialCustomerContract.remarks},
      </if>
      <if test="operateTime != null">
        #{operateTime},
      </if>
      <if test="operateAccount != null">
        #{operateAccount},
      </if>
      <if test="operateType != null">
        #{operateType}
      </if>
    </trim>
  </insert>



  <update id="update">
    update material_contract_operate_turnover set  budget_no = #{materialCustomerContract.budgetNo},
    contract_id = #{contractId}, project_code = #{materialCustomerContract.projectCode},
    customer_name = #{materialCustomerContract.customerName},customer_phone = #{materialCustomerContract.customerPhone},
     budget_area = #{materialCustomerContract.budgetArea},house_layout = #{materialCustomerContract.houseLayout},
      designer_name = #{materialCustomerContract.designerName}, designer_phone = #{materialCustomerContract.designerPhone},
    customer_service = #{materialCustomerContract.customerService},customer_service_phone = #{materialCustomerContract.customerServicePhone},
    manager_name = #{materialCustomerContract.managerName},manager_phone = #{materialCustomerContract.managerPhone},
    inspector_name = #{materialCustomerContract.inspectorName},inspector_phone = #{materialCustomerContract.inspectorPhone},
    contract_sign_date = #{materialCustomerContract.contractSignDate}, plan_start_date = #{materialCustomerContract.planStartDate},
    plan_finish_date = #{materialCustomerContract.planFinishDate}, engineering_cost = #{materialCustomerContract.engineeringCost},
    dismantle_fee = #{materialCustomerContract.dismantleFee}, change_fee = #{materialCustomerContract.changeFee},
    remarks = #{materialCustomerContract.remarks}, create_time = #{materialCustomerContract.createTime},
    create_account = #{materialCustomerContract.createAccount}, status = #{materialCustomerContract.contractStatus},
    operate_time = #{operateTime},operate_account = #{operateAccount},operate_type = #{operateType},
    meal = #{materialCustomerContract.meal},budget_fee = #{materialCustomerContract.budgetFee} where id = #{id}
  </update>

  <select id="getById" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from material_customer_contract
    where id = #{id}
  </select>

  <select id="searchTotal" resultType="long">
    SELECT count(*)
    <include refid="searchFromWhere"/>
  </select>

  <select id="search" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    <include refid="searchFromWhere"/>
    ORDER BY id DESC
    limit #{offset}, #{pageSize}
  </select>

  <sql id="searchFromWhere">
    from material_contract_operate_turnover
    <where>
      <if test="customerName != null and customerName != ''">
        customer_name like CONCAT('%', #{customerName}, '%')
      </if>
      <if test="customerPhone != null and customerPhone != ''">
        AND customer_phone = #{customerPhone}
      </if>
      <if test="contractStatus != null and contractStatus != ''">
        AND status = #{contractStatus}
      </if>
    </where>
  </sql>
</mapper>