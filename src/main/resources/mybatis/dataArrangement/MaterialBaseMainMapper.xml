<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.damei.scm.repository.dataArrangement.MaterialBaseMainDao">
  <resultMap id="BaseResultMap" type="com.damei.scm.entity.dataArrangement.MaterialBaseMain">
    <id column="id" property="id" />
    <result column="contract_id" property="contractId" />
    <result column="project_name" property="projectName" />
    <result column="metarial_type" property="metarialType" />
    <result column="fee_type" property="feeType" />
    <result column="unit" property="unit" />
    <result column="quantity" property="quantity" />
    <result column="wastage" property="wastage" />
    <result column="price"  property="price" />
    <result column="main_metarial_price" property="mainMetarialPrice" />
    <result column="accessories_metarial_price" property="accessoriesMetarialPrice" />
    <result column="artificial_fee" property="artificialFee" />
    <result column="fee_total" property="feeTotal" />
    <result column="remarks" property="remarks" />
    <result column="create_account" property="createAccount" />
    <result column="create_date" property="createDate" />
    <result column="del_account" property="delAccount" />
    <result column="del_date" property="delDate" />
    <result column="del_status" property="delStatus" />
  </resultMap>
  <sql id="Base_Column_List">
      id, contract_id, project_name, metarial_type, fee_type, unit, quantity, wastage,
      price, main_metarial_price, accessories_metarial_price, artificial_fee, fee_total,
      remarks, create_account, create_date,del_account,del_date,del_status
  </sql>
  <delete id="deleteById">
    delete from material_base_main
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="com.damei.scm.entity.dataArrangement.MaterialBaseMain" useGeneratedKeys="true" keyProperty="id">
    insert into material_base_main (id, contract_id, project_name, 
      metarial_type, fee_type, unit, 
      quantity, wastage, price, 
      main_metarial_price, accessories_metarial_price, 
      artificial_fee, fee_total, remarks, 
      create_account, create_date,del_account,del_date,del_status)
    values (#{id}, #{contractId}, #{projectName}, 
      #{metarialType}, #{feeType}, #{unit}, 
      #{quantity}, #{wastage}, #{price}, 
      #{mainMetarialPrice}, #{accessoriesMetarialPrice}, 
      #{artificialFee}, #{feeTotal}, #{remarks}, 
      #{createAccount}, #{createDate},#{delAccount},#{delDate},#{delStatus})
  </insert>
  <update id="update" parameterType="com.damei.scm.entity.dataArrangement.MaterialBaseMain">
    update material_base_main set contract_id = #{contractId},project_name = #{projectName}, metarial_type = #{metarialType},
      fee_type = #{feeType}, unit = #{unit},quantity = #{quantity}, wastage = #{wastage}, price = #{price},
      main_metarial_price = #{mainMetarialPrice},accessories_metarial_price = #{accessoriesMetarialPrice},
      artificial_fee = #{artificialFee},fee_total = #{feeTotal},remarks = #{remarks}  where id = #{id}
  </update>
  <select id="getById"  resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from material_base_main
    where id = #{id}
  </select>
  <select id="findByContractIdAndMetarialType" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from material_base_main
    where contract_id = #{contractId} and metarial_type = #{metarialType} and del_status != 1
    ORDER BY id DESC
  </select>

  <select id="findForTotal" resultType="map">
    select addTotal.addTotal,reduceTotal.reduceTotal,comprehensiveTotal.comprehensiveTotal,
			( addTotal.addTotal + comprehensiveTotal.comprehensiveTotal - reduceTotal.reduceTotal) as totalVal
      from
    (
        select ifnull(sum( fee_total ),0.00) as addTotal from material_base_main where metarial_type = #{metarialType} and contract_id = #{contractId} and fee_type = 'ADD' and del_status != 1
     ) as addTotal,
    (
        select ifnull(sum( fee_total ),0.00) as reduceTotal from material_base_main where metarial_type = #{metarialType} and contract_id = #{contractId} and fee_type = 'REDUCE' and del_status != 1
     ) as reduceTotal,
    (
        select ifnull(sum( fee_total ),0.00) as comprehensiveTotal from material_base_main where metarial_type = #{metarialType} and contract_id = #{contractId} and fee_type = 'COMPREHENSIVE' and del_status != 1
     ) as comprehensiveTotal

  </select>

    <update id="delete" parameterType="map">
        update material_base_main
        <set>
            <if test="delAccount != null">
                del_account = #{delAccount},
            </if>
            <if test="delDate != null">
                del_date = #{delDate},
            </if>
            <if test="delStatus != null">
                del_status = #{delStatus},
            </if>
        </set>
        where id = #{id}
    </update>
</mapper>