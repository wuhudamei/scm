<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.damei.scm.repository.order.OrderItemDao">
    <resultMap id="BaseResultMap" type="OrderItem">
        <id column="id" property="id"/>
        <result column="order_id" property="orderId"/>
        <result column="supplier_id" property="supplierId"/>
        <result column="sku_id" property="sku.id"/>
        <result column="sku_name" property="sku.name"/>
        <result column="model" property="sku.product.model"/>
        <result column="spec" property="sku.product.spec"/>
        <result column="attribute1" property="sku.attribute1"/>
        <result column="attribute2" property="sku.attribute2"/>
        <result column="attribute3" property="sku.attribute3"/>
        <result column="supply_price" property="supplyPrice"/>
        <result column="quantity" property="quantity"/>
        <result column="dm_contract_code" property="contractCode"/>
        <result column="install_date" property="installDate"/>
        <result column="note" property="note"/>
        <result column="status" property="status"/>
        <result column="sender" property="editor.id"/>
        <result column="send_time" property="editTime"/>
        <result column="pay_status" property="payStatus"/>
        <result column="review_size_result" property="reviewSizeResult"/>
        <result column="has_other_fee" property="hasOtherFee"/>
        <result column="installation_location" property="installationLocation"/>
        <result column="order_code" property="orderCode"/>
        <result column="brand_name" property="sku.product.brand.brandName"/>
        <result column="brand_id" property="sku.product.brand.id"/>
        <result column="is_check_scale" property="sku.product.catalog.checkScale"/>
        <result column="convert_unit" property="sku.product.catalog.convertUnit"/>
        <result column="url" property="sku.product.catalog.url"/>
        <result column="notice_install_date" property="noticeInstallDate"/>
        <result column="actual_install_date" property="actualInstallDate"/>
        <result column="storage_date" property="storageDate"/>
        <result column="name" property="name"/>
        <result column="mobile" property="mobile"/>
        <result column="designer" property="designer"/>
        <result column="designer_mobile" property="designerMobile"/>
        <result column="supervisor" property="supervisor"/>
        <result column="supervisor_mobile" property="supervisorMobile"/>
        <result column="project_manager" property="projectManager"/>
        <result column="pm_mobile" property="pmMobile"/>
        <result column="house_addr" property="houseAddr"/>
        <!--当前item下其他费用总和-->
        <result column="otherFee" property="otherFee"/>
        <result column="tablet_num" property="tabletNum"/>
        <result column="spec_unit" property="specUnit"/>
    </resultMap>
    
    <sql id="Base_Column_List">
        id, order_id,supplier_id,sku_id, sku_name, model,spec,attribute1,attribute2,attribute3,
        supply_price,quantity,install_date,note,status,sender,send_time,pay_status,
        review_size_result,has_other_fee,installation_location,brand_name,brand_id,is_check_scale,notice_install_date,
        actual_install_date,storage_date,tablet_num,spec_unit,convert_unit
    </sql>

    <select id="getById" resultMap="BaseResultMap" parameterType="long">
       select * from indent_order_item ioi,indent_order io
       where ioi.id=#{id} and ioi.order_id = io.id
    </select>
    <select id="getByOrderId" resultMap="BaseResultMap" parameterType="long">
       select * from indent_order_item ioi,indent_order io
       where io.id=#{id} and ioi.order_id = io.id
    </select>

    <delete id="deleteById" parameterType="long">
        delete from indent_order_item
        where id = #{id}
    </delete>
    
    <insert id="insert" parameterType="OrderItem" useGeneratedKeys="true" keyProperty="id">
        insert into indent_order_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            order_id,supplier_id,sku_id,sku_name,attribute1,attribute2,attribute3,supply_price,
            quantity,install_date,note,status,pay_status,review_size_result,has_other_fee,installation_location,brand_id,notice_install_date,
            actual_install_date,storage_date,
            <if test="sku!=null and sku.product!= null">
                model,spec,
            </if>
            <if test="editor!=null">
            	sender,send_time,
            </if>
            <if test="tabletNum!=null">
                tablet_num,
            </if>
            <if test="specUnit!=null">
                spec_unit,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{orderId},#{supplierId},#{sku.id},#{sku.name},#{sku.attribute1},#{sku.attribute2},#{sku.attribute3},
            #{supplyPrice},#{quantity},#{installDate},#{note},#{status},#{payStatus},#{reviewSizeResult},
            #{hasOtherFee},#{installationLocation},#{brandId},#{noticeInstallDate},#{actualInstallDate},#{storageDate},
            <if test="sku!=null and sku.product!= null">
                #{sku.product.model}, #{sku.product.spec},
            </if>
            <if test="editor!=null">
            	#{editor.id},#{editTime},
            </if>
            <if test="tabletNum!=null">
                #{tabletNum},
            </if>
            <if test="specUnit!=null">
                #{specUnit},
            </if>
        </trim>
    </insert>
    <update id="updateInstallDate">
        update indent_order_item
        <set>
            <if test="quantity != null">
                quantity = #{quantity},
            </if>
            <if test="installDate!=null">
                install_date = #{installDate},
            </if>
            <if test="note!=null">
                note = #{note},
            </if>

            <if test="reviewSizeResult!=null">
                review_size_result = #{reviewSizeResult},
            </if>

            <if test="hasOtherFee!=null">
                has_other_fee = #{hasOtherFee},
            </if>
            <if test="status!=null">
                status = #{status},
            </if>

            <if test="payStatus!=null">
                pay_status = #{payStatus},
            </if>

            <if test="editor!=null">
                sender = #{editor.id},
            </if>
            <if test="editTime!=null">
                send_time = #{editTime},
            </if>
            <if test="noticeInstallDate!=null">
                notice_install_date = #{noticeInstallDate},
            </if>
            <if test="actualInstallDate!=null">
                actual_install_date = #{actualInstallDate},
            </if>
            <if test="storageDate!=null">
                storage_date = #{storageDate},
            </if>
        </set>
        where id = #{id}
    </update>
    
    <update id="update" parameterType="OrderItem">
        update indent_order_item
        <set>
            <if test="quantity != null">
                quantity = #{quantity},
            </if>
            <if test="installDate!=null">
            	install_date = #{installDate},
            </if>
            <if test="note!=null">
            	note = #{note},
            </if>
            
            <if test="reviewSizeResult!=null">
            	review_size_result = #{reviewSizeResult},
            </if>
            
            <if test="hasOtherFee!=null">
            	has_other_fee = #{hasOtherFee},
            </if>
            <if test="status!=null">
            	status = #{status},
            </if>
            
            <if test="payStatus!=null">
            	pay_status = #{payStatus},
            </if>
            
            <if test="editor!=null">
            	sender = #{editor.id},
            </if>
            <if test="editTime!=null">
            	send_time = #{editTime},
            </if>
            <if test="noticeInstallDate!=null">
                notice_install_date = #{noticeInstallDate},
            </if>
            <if test="actualInstallDate!=null">
                actual_install_date = #{actualInstallDate},
            </if>
            <if test="storageDate!=null">
                storage_date = #{storageDate},
            </if>
        </set>
        where id = #{id}
    </update>
    
	<delete id="deleteByOrderId" parameterType="long">
		delete from indent_order_item where order_id = #{id}
	</delete>

    <select id="findByOrderId" resultMap="BaseResultMap">
        SELECT ioi.id, ioi.order_id,ioi.supplier_id,ioi.sku_id, ioi.sku_name,
            ioi.model,ioi.spec,ioi.attribute1,ioi.attribute2,ioi.attribute3,
            ioi.supply_price,ioi.quantity,ioi.install_date,ioi.notice_install_date,
            ioi.actual_install_date,ioi.note,ioi.status, ioi.sender,ioi.send_time,
            ioi.pay_status, ioi.review_size_result, ioi.has_other_fee,
            ioi.installation_location,ioi.tablet_num,pb.brand_name,
            ioi.brand_id,ioi.tablet_num,ioi.spec_unit,pc.url,pc.is_check_scale,pc.convert_unit,
            (SELECT sum(fee_value) FROM ident_order_item_otherfee
              WHERE item_id = ioi.id ) AS otherFee,po.dm_contract_code
        FROM indent_order_item ioi
        LEFT JOIN prod_sku ps ON ioi.sku_id = ps.id
        LEFT JOIN prod_product pp ON ps.product_id = pp.id
        LEFT JOIN prod_catalog pc ON pp.category_url = pc.url
        LEFT JOIN prod_brand pb ON pb.id = pp.brand_id
        LEFT JOIN indent_order po  ON po.id=ioi.order_id
        where ioi.order_id=#{orderId}
    </select>
    
    <select id="searchTotal" parameterType="map" resultType="long">
        select count(*)
        <include refid="searchFromWhere"/>
    </select>

    <select id="search" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        <include refid="searchFromWhere"/>
        <if test="sort != null">
            order by
            <foreach collection="sort" item="order" separator=",">
            ${order.property} ${order.direction}
        </foreach>
        </if>
        limit #{offset}, #{pageSize}
    </select>
    
    <sql id="searchFromWhere">
        from indent_order_item
        <where>
            <if test="keyword != null">
                order_id like CONCAT('%', #{keyword}, '%')
            </if>
            
            <if test="status!=null">
                and status=#{status}
            </if>
            
            <if test="payStatus!=null">
                and pay_status=#{payStatus}
            </if>
        </where>
    </sql>


    <select id="getByOrderIdForDownload" resultMap="BaseResultMap" parameterType="long">
        SELECT
            ioi.*, io.*,cus.name,
             cus.mobile,
             cucs.house_addr,
             cucs.designer,
             cucs.designer_mobile,
             cucs.supervisor,
             cucs.supervisor_mobile,
             cucs.project_manager,
             cucs.pm_mobile,
             (SELECT sum(fee_value) FROM ident_order_item_otherfee
              WHERE item_id = ioi.id ) AS otherFee
        FROM
            indent_order_item ioi
        JOIN indent_order io ON ioi.order_id = io.id
        JOIN  customer_contract cucs ON cucs.dm_contract_code=io.dm_contract_code
        JOIN customer cus ON cus.id=cucs.customer_id
        WHERE
	     io.id=#{id}
    </select>

    <update id="updateActualTime">
      update indent_order_item
        <set>
            <if test="actualInstallDate!=null">
                actual_install_date = #{actualInstallDate},
            </if>
        </set>
        WHERE  order_id=#{orderId}
    </update>

    <!--批量插入-->
    <insert id="batchInsertList" parameterType="List">
        INSERT INTO indent_order_item
        (
            order_id,supplier_id,sku_id,sku_name,attribute1,attribute2,attribute3,
            supply_price, quantity,install_date,note,status,pay_status,review_size_result,
            has_other_fee,installation_location,brand_id,notice_install_date,
            actual_install_date,storage_date,
            model,spec,
            sender,send_time,
            tablet_num,
            spec_unit
        )
        VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            (
                #{item.orderId},#{item.supplierId},#{item.sku.id},#{item.sku.name},#{item.sku.attribute1},
                #{item.sku.attribute2}, #{item.sku.attribute3},#{item.supplyPrice},#{item.quantity},
                #{item.installDate},#{item.note},#{item.status}, #{item.payStatus},#{item.reviewSizeResult},
                #{item.hasOtherFee},#{item.installationLocation},#{item.brandId},
                #{item.noticeInstallDate},#{item.actualInstallDate},#{item.storageDate},
                #{item.sku.product.model}, #{item.sku.product.spec},
                #{item.editor.id},#{item.editTime},
                #{item.tabletNum},
                #{item.specUnit}
            )
        </foreach>
    </insert>
</mapper>