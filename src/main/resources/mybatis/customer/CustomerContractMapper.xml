<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.damei.scm.repository.customer.CustomerContractDao">
	<resultMap id="BaseResultMap" type="CustomerContract">
		<id column="id" property="id" />
		<result column="dm_contract_code" property="contractCode" />
		<result column="customer_id" property="customer.id" />
		<result column="house_addr" property="houseAddr" />
		<result column="designer" property="designer" />
		<result column="designer_mobile" property="designerMobile" />
		<result column="supervisor" property="supervisor" />
		<result column="supervisor_mobile" property="supervisorMobile" />
		<result column="project_manager" property="projectManager" />
		<result column="pm_mobile" property="pmMobile" />
	</resultMap>
	<resultMap id="fromResultMap" type="CustomerContract" extends="BaseResultMap">
		<result column="name" property="customer.name" />
		<result column="code" property="customer.code" />
		<result column="mobile" property="customer.mobile" />
	</resultMap>

	<sql id="customerContractInfo">
		cc.id,cc.dm_contract_code,cc.customer_id,cc.house_addr,cc.designer,cc.designer_mobile,cc.supervisor,cc.supervisor_mobile,cc.project_manager,cc.pm_mobile,ct.name
		as name,ct.code as code,ct.mobile as mobile
	</sql>
	<sql id="fromInfo">
		from customer_contract cc left join customer ct on
		cc.customer_id = ct.id
	</sql>

	<select id="findAll" resultMap="fromResultMap">
		select
		<include refid="customerContractInfo" />
		<include refid="fromInfo" />
	</select>

	<delete id="deleteById" parameterType="long">
		delete from
		customer_contract where id=#{id}
	</delete>

	<select id="getById" parameterType="long" resultMap="fromResultMap">
		select
		<include refid="customerContractInfo" />
		<include refid="fromInfo" />
		<where>
			<if test="id != null and id != ''">
				cc.id=#{id}
			</if>
			<if test="code != null and code != null">
				cc.dm_contract_code = #{code}
			</if>
		</where>
	</select>

	<insert id="insert" parameterType="CustomerContract"
		useGeneratedKeys="true" keyProperty="id">
		insert into customer_contract (
		<if test="contractCode != null">
			dm_contract_code,
		</if>
		<if test="customer.id != null">
			customer_id,
		</if>
		<if test="houseAddr != null">
			house_addr,
		</if>
		<if test="designer != null">
			designer,
		</if>
		<if test="designerMobile != null">
			designer_mobile,
		</if>
		<if test="supervisor != null">
			supervisor,
		</if>
		<if test="supervisorMobile != null">
			supervisor_mobile,
		</if>
		<if test="projectManager != null">
			project_manager,
		</if>
		<if test="pmMobile != null">
			pm_mobile
		</if>
		) values (
		<if test="contractCode != null">
			#{contractCode},
		</if>
		<if test="customer.id != null">
			#{customer.id},
		</if>
		<if test="houseAddr != null">
			#{houseAddr},
		</if>
		<if test="designer != null">
			#{designer},
		</if>
		<if test="designerMobile != null">
			#{designerMobile},
		</if>
		<if test="supervisor != null">
			#{supervisor},
		</if>
		<if test="supervisorMobile != null">
			#{supervisorMobile},
		</if>
		<if test="projectManager != null">
			#{projectManager},
		</if>
		<if test="pmMobile != null">
			#{pmMobile}
		</if>
		)
	</insert>

	<update id="update" parameterType="CustomerContract">
		update customer_contract set
		<if test="contractCode != null">
			dm_contract_code=#{contractCode},
		</if>
		<if test="customer.id != null">
			customer_id=#{customer.id},
		</if>
		<if test="houseAddr != null">
			house_addr=#{houseAddr},
		</if>
		<if test="designer != null">
			designer=#{designer},
		</if>
		<if test="designerMobile != null">
			designer_mobile=#{designerMobile},
		</if>
		<if test="supervisor != null">
			supervisor=#{supervisor},
		</if>
		<if test="supervisorMobile != null">
			supervisor_mobile=#{supervisorMobile},
		</if>
		<if test="projectManager != null">
			project_manager=#{projectManager},
		</if>
		<if test="pmMobile != null">
			pm_mobile=#{pmMobile}
		</if>
		where id = #{id}
	</update>

	<select id="getByCode" resultMap="BaseResultMap">
		select
		*
		from customer_contract where dm_contract_code
		= #{code}
	</select>

	<select id="searchTotal" parameterType="map" resultType="long">
		select count(*)
		<include refid="fromInfo" />
		<include refid="searchWhere" />
	</select>

	<select id="search" parameterType="map" resultMap="fromResultMap">
		select
		<include refid="customerContractInfo" />
		<include refid="fromInfo" />
		<include refid="searchWhere" />
		<if test="sort != null">
			order by
			<foreach collection="sort" item="order" separator=",">
				${order.property} ${order.direction}
			</foreach>
		</if>
		limit #{offset}, #{pageSize}
	</select>

	<select id="getContractCodeById" resultType="string">
		select cc.dm_contract_code from customer_contract AS  cc where id=#{contractId}
	</select>

	<sql id="searchWhere">
		<where>
			<if test="keyword != null">
				and (cc.dm_contract_code like CONCAT('%', #{keyword}, '%') or ct.name like
				CONCAT('%',
				#{keyword}, '%') or cc.pm_mobile like CONCAT('%', #{keyword},
				'%') )
			</if>
			<if test="customerId != null">
				and customer_id = #{customerId}
			</if>
			<if test="storeCode != null">
				and ct.store_code = #{storeCode}
			</if>
		</where>
	</sql>

</mapper>